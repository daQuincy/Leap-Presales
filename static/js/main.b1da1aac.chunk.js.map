{"version":3,"sources":["App.js","index.js"],"names":["provider","window","ethereum","enable","then","ethers","providers","Web3Provider","signer","getSigner","pluto","Contract","Pluto","abi","App","useState","undefined","beneficiary","setBeneficiary","contribution","setContribution","address","setAddress","txnHash","setTxnHash","tokensAmount","setTokenAmounts","useEffect","a","getAddress","_address","getTokens","_tokensAmount","div","toString","init","buyPresalesTokens","e","preventDefault","gasLimit","value","tx","wait","hash","handleBeneficiary","target","handleContribution","utils","parseEther","className","type","onChange","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iJAQIA,E,kHACJC,OAAOC,SAASC,SAASC,KAAKJ,EAAW,IAAIK,IAAOC,UAAUC,aAAaN,OAAOC,WAClF,IAAMM,EAASR,EAASS,YAElBC,EAAQ,IAAIC,IAChB,6CACAC,EAAMC,IACNL,GAyEaM,MAtEf,WAAgB,IAAD,EACyBC,wBAASC,GADlC,mBACNC,EADM,KACOC,EADP,OAE2BH,wBAASC,GAFpC,mBAENG,EAFM,KAEQC,EAFR,OAGiBL,wBAASC,GAH1B,mBAGNK,EAHM,KAGGC,EAHH,OAIiBP,oBAAS,GAJ1B,mBAINQ,EAJM,KAIGC,EAJH,OAK2BT,mBAAS,GALpC,mBAKNU,EALM,KAKQC,EALR,KAObC,qBAAU,YACE,uCAAG,8BAAAC,EAAA,sEACYpB,EAAOqB,aADnB,cACLC,EADK,gBAEepB,EAAMqB,UAAUD,GAF/B,OAGXE,GADIA,EAFO,QAGmBC,IAAI,KAClCP,EAAgBM,EAAcE,YAC9BZ,EAAWQ,GALA,2CAAH,qDAOVK,KACC,IAEH,IAAMC,EAAiB,uCAAG,WAAOC,GAAP,iBAAAT,EAAA,6DACxBS,EAAEC,iBADsB,SAEP5B,EAAM0B,kBAAkBnB,EAAa,CAACsB,SAAU,IAAQC,MAAOrB,IAFxD,cAElBsB,EAFkB,gBAGlBA,EAAGC,OAHe,uBAIEhC,EAAMqB,UAAUV,GAJlB,OAKxBW,GADIA,EAJoB,QAKMC,IAAI,KAClCP,EAAgBM,EAAcE,YAC9BV,EAAWiB,EAAGE,MAPU,4CAAH,sDAUjBC,EAAiB,uCAAG,WAAOP,GAAP,SAAAT,EAAA,sDACxBV,EAAemB,EAAEQ,OAAOL,OADA,2CAAH,sDAIjBM,EAAkB,uCAAG,WAAOT,GAAP,eAAAT,EAAA,sDACnBT,EAAe4B,QAAMC,WAAWX,EAAEQ,OAAOL,OAC/CpB,EAAgBD,GAFS,2CAAH,sDAKxB,OACE,sBAAK8B,UAAU,MAAf,UACE,0CACA,uBAEA,iCACE,yDAEE,uBAAOC,KAAK,OAAOC,SAAUP,OAE/B,uBACA,uDAEE,uBAAOM,KAAK,OAAOC,SAAUL,UAIjC,gCACE,sDACA,wBAAQM,QAAShB,EAAmBa,UAAU,cAA9C,oBAGF,qDACsBxB,KAGtB,oDACqBF,GAAoB,WC7E/C8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.b1da1aac.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { ethers, Contract , utils} from 'ethers';\nimport Pluto from './contracts/Pluto.json';\n\n// if use this, it does not connect to metamask after build\n//const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n// https://stackoverflow.com/questions/60785630/how-to-connect-ethers-js-with-metamask\nlet provider;\nwindow.ethereum.enable().then(provider = new ethers.providers.Web3Provider(window.ethereum));\nconst signer = provider.getSigner();\n\nconst pluto = new Contract(\n  \"0xB22dee4B962303D42b4fC04B0eEc7429CE512239\",\n  Pluto.abi,\n  signer\n);\n\nfunction App() {\n  const [beneficiary, setBeneficiary] = useState(undefined);\n  const [contribution, setContribution] = useState(undefined);\n  const [address, setAddress] = useState(undefined);\n  const [txnHash, setTxnHash] = useState(false);\n  const [tokensAmount, setTokenAmounts] = useState(0);\n\n  useEffect(() => {\n    const init = async () => {\n      const _address = await signer.getAddress();\n      let _tokensAmount = await pluto.getTokens(_address);\n      _tokensAmount = _tokensAmount.div(1000000000);\n      setTokenAmounts(_tokensAmount.toString());\n      setAddress(_address);\n    };\n    init();\n  }, []);\n\n  const buyPresalesTokens = async (e) => {\n    e.preventDefault();\n    const tx = await pluto.buyPresalesTokens(beneficiary, {gasLimit: 500000, value: contribution});\n    await tx.wait();\n    let _tokensAmount = await pluto.getTokens(address);\n    _tokensAmount = _tokensAmount.div(1000000000);\n    setTokenAmounts(_tokensAmount.toString());\n    setTxnHash(tx.hash);\n  }\n\n  const handleBeneficiary = async (e) => {\n    setBeneficiary(e.target.value);\n  }\n\n  const handleContribution = async (e) => {\n    const contribution = utils.parseEther(e.target.value);\n    setContribution(contribution);\n  }\n  \n  return (\n    <div className=\"App\">\n      <h1>Presales</h1>\n      <br></br>\n\n      <form>\n        <label>\n          Beneficiary Address:\n          <input type=\"text\" onChange={handleBeneficiary} />\n        </label>\n        <br></br>\n        <label>\n          BNB to contribute:\n          <input type=\"text\" onChange={handleContribution} />\n        </label>\n      </form>\n\n      <div>\n        <h2>Buy Presales Tokens:</h2>\n        <button onClick={buyPresalesTokens} className=\"btn-primary\">Buy</button>\n      </div>\n      \n      <h3>\n        Tokens you bought: {tokensAmount}\n      </h3>\n\n      <h3>\n        Transaction hash: {txnHash ? txnHash : \" \"}\n      </h3>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}