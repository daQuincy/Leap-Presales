{"version":3,"sources":["App.js","index.js"],"names":["provider","window","ethereum","enable","then","ethers","providers","Web3Provider","signer","getSigner","pluto","Contract","Pluto","abi","App","useState","undefined","beneficiary","setBeneficiary","contribution","setContribution","buyPresalesTokens","a","value","handleBeneficiary","e","target","handleContribution","utils","parseEther","className","type","onChange","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iJAQIA,E,kHACJC,OAAOC,SAASC,SAASC,KAAKJ,EAAW,IAAIK,IAAOC,UAAUC,aAAaN,OAAOC,WAClF,IAAMM,EAASR,EAASS,YAElBC,EAAQ,IAAIC,IAChB,6CACAC,EAAMC,IACNL,GA+CaM,MA5Cf,WAAgB,IAAD,EACyBC,wBAASC,GADlC,mBACNC,EADM,KACOC,EADP,OAE2BH,wBAASC,GAFpC,mBAENG,EAFM,KAEQC,EAFR,KAIPC,EAAiB,uCAAG,sBAAAC,EAAA,sEAClBZ,EAAMW,kBAAkBJ,EAAa,CAACM,MAAOJ,IAD3B,2CAAH,qDAIjBK,EAAiB,uCAAG,WAAOC,GAAP,SAAAH,EAAA,sDACxBJ,EAAeO,EAAEC,OAAOH,OADA,2CAAH,sDAIjBI,EAAkB,uCAAG,WAAOF,GAAP,eAAAH,EAAA,sDACnBH,EAAeS,QAAMC,WAAWJ,EAAEC,OAAOH,OAC/CH,EAAgBD,GAFS,2CAAH,sDAKxB,OACE,sBAAKW,UAAU,MAAf,UACE,0CACA,uBAEA,iCACE,yDAEE,uBAAOC,KAAK,OAAOC,SAAUR,OAE/B,uDAEE,uBAAOO,KAAK,OAAOC,SAAUL,UAKjC,gCACE,sDACA,wBAAQM,QAASZ,EAAmBS,UAAU,cAA9C,wBCjDRI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e74b9444.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { ethers, Contract , utils} from 'ethers';\nimport Pluto from './contracts/Pluto.json';\n\n// if use this, it does not connect to metamask after build\n//const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n// https://stackoverflow.com/questions/60785630/how-to-connect-ethers-js-with-metamask\nlet provider;\nwindow.ethereum.enable().then(provider = new ethers.providers.Web3Provider(window.ethereum));\nconst signer = provider.getSigner();\n\nconst pluto = new Contract(\n  \"0xB22dee4B962303D42b4fC04B0eEc7429CE512239\",\n  Pluto.abi,\n  signer\n);\n\nfunction App() {\n  const [beneficiary, setBeneficiary] = useState(undefined);\n  const [contribution, setContribution] = useState(undefined);\n\n  const buyPresalesTokens = async () => {\n    await pluto.buyPresalesTokens(beneficiary, {value: contribution});\n  }\n\n  const handleBeneficiary = async (e) => {\n    setBeneficiary(e.target.value);\n  }\n\n  const handleContribution = async (e) => {\n    const contribution = utils.parseEther(e.target.value);\n    setContribution(contribution);\n  }\n  \n  return (\n    <div className=\"App\">\n      <h1>Presales</h1>\n      <br></br>\n\n      <form>\n        <label>\n          Beneficiary Address:\n          <input type=\"text\" onChange={handleBeneficiary} />\n        </label>\n        <label>\n          BNB to contribute:\n          <input type=\"text\" onChange={handleContribution} />\n        </label>\n      </form>\n\n\n      <div>\n        <h2>Buy Presales Tokens:</h2>\n        <button onClick={buyPresalesTokens} className=\"btn-primary\">Buy</button>\n      </div>\n      \n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}