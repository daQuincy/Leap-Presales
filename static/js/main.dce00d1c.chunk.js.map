{"version":3,"sources":["App.js","index.js"],"names":["provider","undefined","signer","leap","useCardStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","App","useState","connection","setConnection","signerAddress","setSignerAddress","totalContribution","setTotalContribution","chainID","setChainID","allowBuy","setAllowBuy","presalesStart","setPresalesStart","presalesEnd","setPresalesEnd","capReached","setCapReached","indvCap","setIndvCap","beneficiary","setBeneficiary","beneContributed","setBeneContributed","beneTokensAmount","setBeneTokensAmount","contribution","setContribution","valBeneficiary","setValBeneficiary","valContribution","setValContribution","buyButtonLoading","setBuyButtonLoading","refundButtonLoading","setRefundButtonLoading","withdrawButtonLoading","setWithdrawButtonLoading","txnLink","setTxnLink","txnHash","setTxnHash","contributed","setContributed","tokensAmount","setTokenAmounts","cardClasses","useEffect","load","setInterval","a","getNetwork","_chainID","getSigner","getAddress","_address","Contract","Leap","networks","address","abi","getTokens","_tokensAmount","utils","formatUnits","getContribution","_contributed","formatEther","weiRaised","_totalContribution","getPresalesStarted","_presalesStart","getPresalesEnded","_presalesEnd","_capReached","_allowBuy","clearInterval","getProvider","e","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","56","network","chainId","infuraId","web3Modal","Web3Modal","cacheProvider","connect","_provider","ethers","providers","Web3Provider","buyPresalesTokens","preventDefault","gasLimit","value","tx","wait","txLink","hash","withdrawPresalesTokens","refundCapNotReached","refund","handleBeneficiary","_beneficiary","target","valid","isAddress","handleContribution","_contribution","_individualCap","parseFloat","parseEther","className","Button","variant","color","onClick","Alert","severity","Grid","TextField","onChange","label","placeholder","fullWidth","disabled","error","container","direction","justify","alignItems","loading","Card","CardContent","Typography","gutterBottom","component","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dce00d1c.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { ethers, Contract , utils} from 'ethers';\nimport { Button, TextField, Grid, Card, CardContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { Alert } from '@material-ui/lab';\n\nimport Leap from './contracts/Leap.json';\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nlet provider = undefined;\nlet signer = undefined;\nlet leap = undefined;\n\nconst useCardStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nfunction App() {\n  const [connection, setConnection] = useState(false);\n  const [signerAddress, setSignerAddress] = useState(undefined);\n\n  const [totalContribution, setTotalContribution] = useState(0);\n  const [chainID, setChainID] = useState(undefined);\n\n  const [allowBuy, setAllowBuy] = useState(false);\n  const [presalesStart, setPresalesStart] = useState(false);\n  const [presalesEnd, setPresalesEnd] = useState(false);\n  const [capReached, setCapReached] = useState(false);\n  const [indvCap, setIndvCap] = useState(false);\n\n  // beneficiary's stats\n  const [beneficiary, setBeneficiary] = useState(undefined);\n  const [beneContributed, setBeneContributed] = useState(0);\n  const [beneTokensAmount, setBeneTokensAmount] = useState(0);\n  \n  const [contribution, setContribution] = useState(0);\n  const [valBeneficiary, setValBeneficiary] = useState(false);\n  const [valContribution, setValContribution] = useState(false);\n\n  const [buyButtonLoading, setBuyButtonLoading] = useState(false);\n  const [refundButtonLoading, setRefundButtonLoading] = useState(false);\n  const [withdrawButtonLoading, setWithdrawButtonLoading] = useState(false);\n\n  const [txnLink, setTxnLink] = useState(undefined);\n  const [txnHash, setTxnHash] = useState(undefined);\n\n  // current wallet's stats\n  const [contributed, setContributed] = useState(0);\n  const [tokensAmount, setTokenAmounts] = useState(0);\n\n  const cardClasses = useCardStyles();\n\n  useEffect(() => {\n    const load = setInterval(async () => {\n      if (provider !== undefined) {\n        const _chainID = (await provider.getNetwork())[\"chainId\"];\n        signer = provider.getSigner();\n        const _address = await signer.getAddress();\n        setSignerAddress(_address);\n\n        if (_chainID === 97 || _chainID === 56){\n          setConnection(true);\n          \n          if (leap === undefined) {\n            leap = new Contract(\n              Leap.networks[_chainID].address,\n              Leap.abi,\n              signer\n            )\n          }\n\n          let _tokensAmount = await leap.getTokens(_address);\n          _tokensAmount = utils.formatUnits(_tokensAmount, 9);\n\n          let _contributed = await leap.getContribution(_address);\n          _contributed = utils.formatEther(_contributed);\n\n          let _totalContribution = await leap.weiRaised();\n          _totalContribution = utils.formatEther(_totalContribution);\n\n          const _presalesStart = await leap.getPresalesStarted();\n          const _presalesEnd = await leap.getPresalesEnded();\n          const _capReached = await leap.capReached();\n\n          const _allowBuy = _presalesStart && !_presalesEnd;\n\n          setTokenAmounts(_tokensAmount);\n          setContributed(_contributed);\n          setTotalContribution(_totalContribution);\n          setPresalesStart(_presalesStart);\n          setPresalesEnd(_presalesEnd);\n          setAllowBuy(_allowBuy);\n          setCapReached(_capReached);\n          setConnection(true);\n        } else {\n          setConnection(false);\n        }\n\n      } else {\n        setConnection(false);\n      }\n    }, 1000);\n\n    return () => clearInterval(load);\n  }, []);\n\n  const getProvider = async (e) => {\n    let providerOptions = {\n      walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n          rpc: {\n            // mainnet: https://bsc-dataseed.binance.org/\n            // testnet: https://data-seed-prebsc-1-s1.binance.org:8545/\n            56: 'https://data-seed-prebsc-1-s1.binance.org:8545/'\n          },\n          network: 'binance',\n          chainId: 56,\n          infuraId: \"1212\",\n        }\n      }\n    };\n\n    const web3Modal = new Web3Modal({\n      network: \"binance\",\n      cacheProvider: true, \n      providerOptions, \n    });\n\n    let _provider = await web3Modal.connect();\n    provider = new ethers.providers.Web3Provider(_provider, \"any\");\n    const _chainID = (await provider.getNetwork())[\"chainId\"];\n    signer = provider.getSigner();\n\n    setChainID(_chainID);\n  };\n\n  const buyPresalesTokens = async (e) => {\n    e.preventDefault();\n    setBuyButtonLoading(true);\n    const tx = await leap.buyPresalesTokens(beneficiary, {gasLimit: 500000, value: contribution});\n    await tx.wait();\n\n    let txLink;\n    if (chainID === 97) {\n      txLink = \"https://testnet.bscscan.com/tx/\" + tx.hash;\n    } else if (chainID === 56) {\n      txLink = \"https://bscscan.com/tx/\" + tx.hash;\n    }\n\n    let _tokensAmount = await leap.getTokens(beneficiary);\n    _tokensAmount = utils.formatUnits(_tokensAmount, 9);\n\n    let _contributed = await leap.getContribution(beneficiary);\n    _contributed = utils.formatEther(_contributed);\n    \n    setBeneContributed(_contributed);\n    setBeneTokensAmount(_tokensAmount);\n    setTxnHash(tx.hash);\n    setTxnLink(txLink);\n    setBuyButtonLoading(false);\n  }\n\n  const withdrawPresalesTokens = async (e) => {\n    e.preventDefault();\n    setWithdrawButtonLoading(true);\n    const tx = await leap.withdrawPresalesTokens(beneficiary, {gasLimit: 500000});\n    await tx.wait();\n\n    let txLink;\n    if (chainID === 97) {\n      txLink = \"https://testnet.bscscan.com/tx/\" + tx.hash;\n    } else if (chainID === 56) {\n      txLink = \"https://bscscan.com/tx/\" + tx.hash;\n    }\n\n    setTxnHash(tx.hash);\n    setTxnLink(txLink);\n    setWithdrawButtonLoading(false);\n  }\n\n  const refundCapNotReached = async (e) => {\n    e.preventDefault();\n    setRefundButtonLoading(true);\n    const tx = await leap.refund(beneficiary, {gasLimit: 500000});\n    await tx.wait();\n\n    let _tokensAmount = await leap.getTokens(beneficiary);\n    _tokensAmount = utils.formatUnits(_tokensAmount, 9);\n\n    let _contributed = await leap.getContribution(beneficiary);\n    _contributed = utils.formatEther(_contributed);\n    \n    setBeneContributed(_contributed);\n    setBeneTokensAmount(_tokensAmount);    \n\n    let txLink;\n    if (chainID === 97) {\n      txLink = \"https://testnet.bscscan.com/tx/\" + tx.hash;\n    } else if (chainID === 56) {\n      txLink = \"https://bscscan.com/tx/\" + tx.hash;\n    }\n\n    setTxnHash(tx.hash);\n    setTxnLink(txLink);\n    setRefundButtonLoading(false);\n  }\n\n  const handleBeneficiary = async (e) => {\n    let _beneficiary = e.target.value;\n\n    const valid = utils.isAddress(_beneficiary);\n    try {\n      if (valid) {\n        _beneficiary = utils.getAddress(_beneficiary);\n\n        let _tokensAmount = await leap.getTokens(_beneficiary);\n        _tokensAmount = utils.formatUnits(_tokensAmount, 9);\n\n        let _contributed = await leap.getContribution(_beneficiary);\n        _contributed = utils.formatEther(_contributed);\n        \n        setBeneContributed(_contributed);\n        setBeneTokensAmount(_tokensAmount);\n        setValBeneficiary(true);\n        setBeneficiary(_beneficiary);\n      } else {\n        setValBeneficiary(false);\n        setBeneficiary(0);\n      }\n    } catch {\n      setValBeneficiary(false);\n      setBeneficiary(0);\n    }\n  }\n\n  const handleContribution = async (e) => {\n    let _contribution = e.target.value;\n    try {\n      if (_contribution <= 0 || _contribution > 0.5) {\n        setValContribution(false);\n        setContribution(0);\n        setIndvCap(false);\n      } else {\n        let _contributed = await leap.getContribution(beneficiary);\n        _contributed = utils.formatEther(_contributed);\n        const _individualCap = parseFloat(_contribution) + parseFloat(_contributed);\n        if (_individualCap > 0.5) {\n          setIndvCap(true);\n        } else {\n          setIndvCap(false);\n        }\n        _contribution = utils.parseEther(_contribution);\n        \n        setValContribution(true);\n        setContribution(_contribution);\n      }\n    } catch {\n      setValContribution(false);\n      setContribution(0);\n      setIndvCap(false);\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      <h1>Presales</h1>\n      <br></br>\n\n      <Button variant=\"outlined\" color={connection ? \"primary\" : \"secondary\"} onClick={getProvider}>{connection ? \"Connected\" :\"Connect to Web3\"}</Button>\n      <br></br>\n      {connection ? <Alert variant=\"outlined\" severity=\"info\">{\"Address: \" + signerAddress}</Alert> : <Alert severity=\"error\">\"Please connect to BSC through your wallet!\"</Alert>} \n      {(!presalesStart || connection) ? <Alert variant=\"outlined\" severity=\"warning\">Presales has not started</Alert> : \" \"}\n      {presalesEnd ? <Alert variant=\"outlined\" severity=\"warning\">\"Presales has already ended</Alert> : \" \"}\n      <Alert variant=\"outlined\" severity=\"info\">{\"Current toal contribution: \" + totalContribution + \" BNB\"}</Alert>\n\n      <br></br>\n      <Grid>\n        <TextField\n            onChange={handleBeneficiary}\n            label=\"Beneficiary Address\"\n            placeholder=\"Enter a valid BNB address\"\n            variant=\"outlined\"\n            fullWidth={true}\n        />\n\n        <TextField\n          onChange={handleContribution}\n          label=\"Amount to Contribute (BNB)\"\n          placeholder=\"MAX: 0.5 BNB per address (cumulative)\"\n          variant=\"outlined\"\n          fullWidth={true}\n          disabled={presalesEnd}\n        />\n      </Grid>\n      <br></br>\n\n      {indvCap ? <Alert error>This transaction will fail because you exceeded individual limit. Enter a lower amount</Alert> : \" \"}\n\n      <Grid \n        container\n        direction=\"row\"\n        justify=\"space-evenly\"\n        alignItems=\"center\"\n      >\n        <Button color=\"primary\" variant=\"contained\" disabled={!valContribution || !valBeneficiary || !allowBuy || !connection} loading={buyButtonLoading} onClick={buyPresalesTokens}>\n          Buy Tokens!\n        </Button>\n        {\" \"}\n        <Button color=\"primary\" variant=\"contained\" disabled={!(presalesEnd && capReached) || !valBeneficiary || !connection} loading={withdrawButtonLoading} onClick={withdrawPresalesTokens}>\n          Withdraw\n        </Button>\n        {\" \"}\n        <Button color=\"primary\" variant=\"contained\" disabled={!(presalesEnd && !capReached) || !valBeneficiary || !connection} loading={refundButtonLoading} onClick={refundCapNotReached}>\n          Refund\n        </Button>\n      </Grid>\n\n      <br></br>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Card className={cardClasses.root}>\n          <CardContent>\n            <Typography className={cardClasses.title} color=\"textSecondary\" gutterBottom>\n              Your stats\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n                Tokens bought: {tokensAmount}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n                BNB contributed: {contributed}\n            </Typography>\n          </CardContent>\n        </Card>\n\n        <Card className={cardClasses.root}>\n          <CardContent>\n            <Typography className={cardClasses.title} color=\"textSecondary\" gutterBottom>\n              Beneficiary's stat\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n                Tokens bought: {beneTokensAmount}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n                BNB contributed: {beneContributed}\n            </Typography>\n          </CardContent>\n        </Card>\n\n      </Grid>\n\n      {txnHash ? <Alert severity=\"info\">{\"Verify you transaction here\"} content={<a href={txnLink}>{txnHash}</a>}</Alert> : \" \"}\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}